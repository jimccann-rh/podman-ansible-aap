---
- name: deploy httpd container
  hosts: all
  become: true
  gather_facts: false
  vars:
    webroot: "/webroot"
  tasks:

#    - name: disable package
#      ansible.builtin.yum:
#        name:
#          - amzn2extra-docker
#        state: disable
#        update_cache: true


#    - name: lazy installs
#      ansible.builtin.shell: "{{ item }}"
#      become: true
#      loop:
#        - yum-config-manager --disable amzn2extra-docker
#        - yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#        - curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_7/devel:kubic:libcontainers:stable.repo
#        - yum -y install yum-plugin-copr
#        - yum -y copr enable lsm5/container-selinux

#sudo wget https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/old_podman/CentOS_7/devel:kubic:libcontainers:stable:old_podman.repo

#In /etc/yum.repos.d/amzn2-core.repo comment out priority=10 line for [amzn2-core] repo


    - name: add repo
      copy:
        content: | 
          [centos-base]
          name=CentOS-7 - Base
          baseurl=http://mirror.centos.org/centos-7/7/os/x86_64/
          enabled=0
          gpgcheck=0
          [centos-extras]
          name=CentOS-7 - Extras
          baseurl=http://mirror.centos.org/centos-7/7/extras/x86_64/
          gpgcheck=0
        dest:  /etc/yum.repos.d/centos.repo

    - name: podman installed
      ansible.builtin.yum:
        name: podman
        state: latest
        enablerepo: centos-base

    - name: pull image
      containers.podman.podman_image:
        name: httpd
        pull: true
        tag: latest

    - name: webroot present
      ansible.builtin.file:
        path: "{{ webroot }}"
        state: directory
        owner: "root"
        group: "root"
        mode: '0777'
        setype: "container_share_t"

    - name: custom index.html
      ansible.builtin.copy:
        dest: "{{ webroot }}/index.html"
        content: |
                    Custom Web Page
        setype: "container_share_t"

    - name: run httpd container
      containers.podman.podman_container:
        name: webserver
        image: httpd
        state: started
        detach: true
        expose:
          - 80
        ports:
          - 8080:80
        volume:
          - "{{ webroot }}:/usr/local/apache2/htdocs/:exec"
      register: rhc

    - name: Gather facts on a specific container
      containers.podman.podman_container_info:
        name: webserver
      register: rhci

    - debug:
        msg: 
          - "Run register output {{ rhc }}"
#          - "{{ rhc.stdout_lines }}"
          - "Gather Facts on specific container output {{ rhci }}"


    - name: Writing output to journald
      containers.podman.podman_container:
        name: myservice
        image: busybox
        log_driver: journald
        log_level: debug

    - name: Writing output to file
      containers.podman.podman_container:
        name: myservice2
        image: busybox
        command: 'ls /bin'
        log_options: path=/var/log/mycontainer.json
        log_driver: k8s-file
        log_level: debug


    - name: get log file
      slurp:
        src: /var/log/mycontainer.json
      become: true
      register: contents


    - name: decode remote content
      set_fact:
        remote_content: "{{contents.content | b64decode}}"



    - debug:
        msg:
          - "File output {{ remote_content }}"

